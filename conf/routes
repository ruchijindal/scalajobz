# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index


GET    /signup/:flag                 controllers.Application.signUpOnScalaJobz(flag:String)
POST    /signup/:flag                      controllers.Application.newUser(flag:String)

GET    /login                         controllers.Application.loginOnScalaJobz
POST    /login/:flag                  controllers.Application.logIn(flag:String)

GET    /postAJob                      controllers.JobController.postAJob
POST    /postAJob                     controllers.JobController.newJob

GET    /findAllJobs                   controllers.Application.index

GET    /logout                        controllers.Application.logOutFromScalaJobz

POST   /findAJob/:searchString/:editFlag   controllers.JobController.findAJob(searchString: String , editFlag: String)

GET   /jobDetail/:jobId				controllers.JobController.findJobDetail(jobId:String)

#Edit By UserId

GET    /editUserProfile                 controllers.UserController.editUserProfile

GET   /findJobPostByUserId				controllers.UserController.findJobPostByUserId

POST /updateUserProfile					controllers.UserController.updateUserProfile

GET /findJobPostForEdit/:jobId			controllers.JobController.findJobPostForEdit(jobId: String)

POST /editJob/:jobId				     controllers.JobController.editJob(jobId: String)

GET /deleteJob/:jobId			 controllers.JobController.deleteJob(jobId: String)

#Inform Me								

POST /registerJobSeeker/:emailId/:skillsToken			controllers.UserController.registerJobSeeker(emailId: String, skillsToken: String)

GET  /unSubscribeJobSeeker/:userId		                controllers.UserController.unSubscribeJobSeeker(userId:String)			

GET  /activateJobAlert/:userId		                    controllers.UserController.activateJobAlert(userId:String)
#Forget Password

GET /forgetPassword 					            controllers.UserController.forgetPassword

POST /sendForgetPassword/:emailId 					controllers.UserController.sendForgetPassword(emailId:String)

#Contact Us

GET /contactUs									   controllers.Application.contactUs
POST /contactUsEmail							   controllers.Application.contactUsEmail

# Javascript routing
#GET     /assets/javascripts/routes                 controllers.JobController.javascriptRoutes


#REST API

GET     /restApi							                              controllers.RESTServiceController.restApi
GET 	/getAllJobs									             controllers.RESTServiceController.processGetAllJobsList		
GET		/getJobsForACriteria/:code 	                 controllers.RESTServiceController.processGetJobListForQueryString(code: String)
GET		/getJobDetail/:jobId	                                 controllers.RESTServiceController.getJobDetailViaJobId(jobId: String)
GET     /sendJobDetailMail									 controllers.RESTServiceController.sendJobDetailMailForRestApi

#SocialProfileLogin


GET /twitter/twitterLogin 							controllers.TwitterController.twitterLogin
GET /twitter/callback						        controllers.TwitterController.twitterCallBack
GET /linkedin/login 							    controllers.LinkedInController.linkedinLogin
GET /linkedin/callback						        controllers.LinkedInController.linkedinCallback
GET /facebook/login 							    controllers.FacebookController.facebookLogin
GET /facebook/callback						        controllers.FacebookController.facebookCallback												
GET /google/login 							        controllers.GoogleController.googleLogin
GET /google/callback						        controllers.GoogleController.googleCallback												

#Error Page

GET /errorPage										controllers.Application.errorPage
GET /loginFailure								    controllers.Application.loginFailureViaSocialNetworks

#Pagination

GET /jobPagination/:editFlag					    controllers.Application.jobPagination(editFlag:String)								

#Private Policy

GET /privacyPolicy   							   controllers.Application.privacyPolicy
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)